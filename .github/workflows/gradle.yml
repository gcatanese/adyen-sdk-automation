name: Update SDKs

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths-ignore:
      - '**/README.md'
      - README.md
      - LICENSE

permissions:
  contents: read

concurrency:
  group: ci-sdk-automation

jobs:
  generate:
    strategy:
      matrix:
        # project: [ go, php, java, node, dotnet, python, ruby ]
        project: [ java ]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Clone ${{ matrix.project }} repository
      uses: actions/checkout@v4
      with:
        #token: ${{ secrets.ADYEN_AUTOMATION_BOT_ACCESS_TOKEN }}
        #repository: Adyen/adyen-${{ matrix.project }}-api-library
        repository: gcatanese/adyen-${{ matrix.project }}-api-library
        path: ${{ matrix.project }}/repo
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3
    - name: Override properties
      if: matrix.project == 'node'
      run: cp ${{ matrix.project }}/gradle.properties buildSrc
    - name: Generate code for ${{ matrix.project }}
      #run: ./gradlew ${{ matrix.project }}:services
      run: ./gradlew ${{ matrix.project }}:checkout
    - name: Generate OpenAPI diffs
      id: openapi-diff
      run: |
        cd schema
        COMMIT_HASH=$(git rev-parse HEAD)
        COMMIT_HASH_BEFORE=$(git rev-parse HEAD^)
        # COMMIT_HASH="fa8048c5825279b378393fa012de99157c560039"
        # COMMIT_HASH_BEFORE="07d07d2d23197f0b92175635116e857bcdceb1b4"
        
        # save commit that has triggered the OpenAPI generation
        echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_ENV

        # Fetch files modified by the commit
        files=$(git diff-tree --no-commit-id --name-only -r $COMMIT_HASH)

        for file in $files; do
          if [[ $file == *.json ]]; then
            # get filename
            filename="${file%.*}"
            # checkout file before the commit
            temp_before_name="${filename}_before.json"
            git show $COMMIT_HASH_BEFORE:$file > $temp_before_name
            
            # checkout file after the commit
            temp_after_name="${filename}_after.json"
            git show $COMMIT_HASH:$file > $temp_after_name

            echo "Processing: $filename between commits [$COMMIT_HASH_BEFORE:$COMMIT_HASH]"
            
            docker run -v "$(pwd):/specs" --rm -t tufin/oasdiff diff \
              -f markup \
              /specs/$temp_before_name \
              /specs/$temp_after_name \
              >> "oas_diff_${filename//\//_}.md"

          fi
        done
        
    # - name: OpenAPI diffs
    #   id: openapi-diffs
    #   run: |
    #     cd schema
    #     #echo "$FILE_NAMES"
    #     #echo "$LINK_BEFORE"
    #     #echo "$LINK_AFTER"

    #     # convert strings to arrays
    #     befores=($LINK_BEFORE)
    #     afters=($LINK_AFTER)
    #     filenames=($FILE_NAMES)
        
    #     length=${#befores[@]}

        # # openapi-diff changes
        # for (( i=0; i<length; i++ )); do
        #   before="${befores[$i]}"
        #   after="${afters[$i]}"
        #   filename="${filenames[$i]}"
        #   markdown="openapi_diff_${filename//\//_}.md"
          
        #   # generate markdown
        #   docker run -v "$(pwd):/specs" --rm openapitools/openapi-diff:2.1.0-beta.11 \
        #     /specs/$before \
        #     /specs/$after \
        #     --markdown /specs/$markdown \
        #     --off

        # done

        # # oasdiff changes
        # for (( i=0; i<length; i++ )); do
        #   before="${befores[$i]}"
        #   after="${afters[$i]}"
        #   filename="${filenames[$i]}"
        #   markdown="oas_diff_${filename//\//_}.md"
          
        #   docker run -v "$(pwd):/specs" --rm -t tufin/oasdiff diff \
        #     -f markup \
        #     /specs/$before \
        #     /specs/$after \
        #     >> $markdown

        # done

    # upload generated openapi-diff markdowns as artifacts       
    - uses: actions/upload-artifact@v4
      id: artifact-upload-step
      with:
        name: openapi-diff files (commit ${{ env.COMMIT_HASH }})
        path: |
          **/oas_diff_*.md
      
    - name: Set PR variables
      id: vars
      run: |
        cd schema
        echo pr_title="Update all services" >> "$GITHUB_OUTPUT"
        echo pr_body="OpenAPI spec or templates produced changes on $(date +%d-%m-%Y) \
          by [commit](https://github.com/Adyen/adyen-openapi/commit/$(git rev-parse HEAD)). \
          Download [OpenAPI diffs](${{ steps.artifact-upload-step.outputs.artifact-url }}) to view the changes." >> "$GITHUB_OUTPUT"
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v7
      with:
        path: ${{ matrix.project }}/repo
        token: ${{ secrets.ADYEN_AUTOMATION_BOT_ACCESS_TOKEN }}
        #token: ${{ secrets.ADYEN_AUTOMATION_BOT_ACCESS_TOKEN }}
        #committer: ${{ secrets.ADYEN_AUTOMATION_BOT_EMAIL }}
        #author: ${{ secrets.ADYEN_AUTOMATION_BOT_EMAIL }}
        branch: sdk-automation/models
        title: ${{ steps.vars.outputs.pr_title }}
        body: ${{ steps.vars.outputs.pr_body }}
        commit-message: |
          ${{ contains(fromJSON('["go", "php", "node"]'), matrix.project) && '[reformat]' }}[adyen-sdk-automation] automated change
